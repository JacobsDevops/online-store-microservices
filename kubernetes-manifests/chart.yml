apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  namespace: dev
  labels:
    app: carts-pod  
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: carts-pod  
  template:
    metadata:
      labels:
        app: carts-pod
    spec:
      containers:
        - name: carts
          env:
            - name: JAVA_OPTS
              value: -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
          envFrom:
            - configMapRef:
                name: carts-config
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "public.ecr.aws/aws-containers/retail-store-sample-cart:0.8.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 128m
              memory: 128Mi
          

---

apiVersion: v1
kind: Service
metadata:
  name: carts-svc
  namespace: dev
spec:
  ports:
    - name: "80"
      protocol: TCP
      port: 80
      targetPort: 8080 
      nodePort: 30012
  selector:
    app: frontend-pod
  type: NodePort

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: carts-config
  namespace: dev
data:
  SPRING_PROFILES_ACTIVE: dynamodb
  CARTS_DYNAMODB_TABLENAME: Items
  CARTS_DYNAMODB_CREATETABLE: "false"
  CARTS_DYNAMODB_CREATETABLE: "true"
  AWS_ACCESS_KEY_ID: key
  AWS_SECRET_ACCESS_KEY: secret
  CARTS_DYNAMODB_ENDPOINT: http://carts-dynamodb:8000
  