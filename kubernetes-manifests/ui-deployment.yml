apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend-pod
  name: frontend-app
  namespace: dev
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: frontend-pod
  strategy: {}
  template:
    metadata:
      labels:
        app: frontend-pod
    spec:
      #imagePullSecrets:
        #- name: regcred
      containers:
        env:
            - name: JAVA_OPTS
              value: -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
        - envFrom:
            - configMapRef:
                name: frontend-config
          securityContext:
            #Using runAsNonRoot: true with NET_BIND_SERVICE ensures the application runs securely while still being able to listen on a privileged port.
            capabilities:
              add:
              - NET_BIND_SERVICE # grants permission to bind to ports <1024 without requiring root privileges.
              drop:
              - ALL # removes all unnecessary linux capabilities for security
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "public.ecr.aws/aws-containers/retail-store-sample-ui:0.8.4"
          name: frontend-app
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: dev
spec:
  ports:
    - name: "80"
      protocol: TCP
      port: 80
      targetPort: 8080 
      nodePort: 30011
  selector:
    app: frontend-pod
  type: NodePort

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: dev
data:
  APPUSER : "appuser"
  APPUID : "1000"
  APPGID : "1000"
  