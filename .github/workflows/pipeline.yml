# .github/workflows/1-terraform-apply.yml
name: 1. Deploy K3s Cluster

on:
  workflow_dispatch:  # Manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  terraform-apply:
    name: Deploy K3s Cluster with Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        working-directory: k3s-terraform
        run: terraform init

      - name: Plan Terraform
        working-directory: k3s-terraform
        run: terraform plan

      - name: Apply Terraform
        working-directory: k3s-terraform
        run: terraform apply -auto-approve

---
# .github/workflows/2-deploy-ui.yml
name: 2. Deploy UI to K3s

on:
  workflow_dispatch:  # Manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  deploy-ui:
    name: Deploy UI to K3s
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Get K3s Cluster kubeconfig
        run: |
          aws eks update-kubeconfig --name your-cluster-name --region ${{ secrets.AWS_REGION }}

      - name: Apply Kubernetes Manifests
        run: kubectl apply -f kubernetes-manifests/

---
# .github/workflows/3-terraform-destroy.yml
name: 3. Destroy K3s Cluster

on:
  workflow_dispatch:  # Manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  terraform-destroy:
    name: Destroy K3s Cluster with Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        working-directory: k3s-terraform
        run: terraform init

      - name: Destroy Terraform Resources
        working-directory: k3s-terraform
        run: terraform destroy -auto-approve
